#define RIGHT 5
#define LEFT 6

#define START 1
#define STOP 2

//#define DEBUG

//The bot had some issures with real sharp turns

//Left motor / right motor
int Neg_Big;//default 75 / 25
int Neg_Small;//default 50 / 25
int Pos_Small;//default 25 / 50
int Pos_Big;    //default 25 / 75

//Sets the speeds for the two motors
void motor_speed(int rightSpeed, int leftSpeed)
{
    motor(0, rightSpeed);
    motor(2, leftSpeed);
}

//returns the difference between the two sensors
int get_sensor_dif(void)
{
    return (analog(LEFT) - analog(RIGHT));
}

//Returns the difference between the two sensors
void calc_fuzzy(void)
{
    int dif;
    int temp;
    //Left - Right
    dif = get_sensor_dif();
    
    if(dif < -100)
      {
        //Neg Big
        temp = ((-1 * dif) - 100);
        
        //if we are over certain of a value set it to 100
        if(temp > 100)
          {
            Neg_Big = 100;
        }
        else
          {
            Neg_Big = (temp);
        }
        
        Neg_Small = 0;
        Pos_Small = 0;
        Pos_Big = 0;
    }
    else if(dif < 0)
      {
        //Neg_Small
        temp = (-1 * dif);
        
        Neg_Small = (temp);
        
        Neg_Big = 0;
        Pos_Small = 0;
        Pos_Big = 0;
    }
    else if(dif < 100)
      {
        //Pos_Small
        Pos_Small = dif;
        
        Neg_Big = 0;
        Neg_Small = 0;
        Pos_Big = 0;
    }
    else
      {
        //Pos_Big
        temp = dif - 100;
        
        //if we are over certain of a value set it to 100
        if(temp > 100)
          {
            Pos_Big = 100;
        }
        else
          {
            Pos_Big = (temp);
        }
        
        Neg_Big = 0;
        Neg_Small = 0;
        Pos_Small = 0;
    }
}


//Turn off both motors
void stop(void)
{
    off(0);
    off(2);
}

//Calculates and sets the motor speeds for the bot
void ctrl_bot(void)
{
    int left_speed, right_speed;
    calc_fuzzy();
    
    //Check which state we are in
    if(Neg_Big != 0)
      {
        //Calc. Motor speed for Neg_Big
        right_speed = (int) (((float) Neg_Big / 100.0) * 75.0)  + 25;
        left_speed = (int) (((float) Neg_Big / 100.0) * 25.0);
    }
    else if(Neg_Small != 0)
      {
        //Calc. Motor speed for Neg_Small
        right_speed = (int) (((float) Neg_Big / 100.0) * 50.0) + 25;
        left_speed = (int) (((float) Neg_Big / 100.0) * 25.0) + 25;
    }
    else if(Pos_Small != 0)
      {
        //Calc. Motor speed for Pos_Small
        right_speed = (int) (((float) Neg_Big / 100.0) * 25.0) + 25;
        left_speed = (int) (((float) Neg_Big / 100.0) * 50.0) + 25;
    }
    else//Pos_Big != 0
      {
        //Calc. Motor speed for Pos_Big
        right_speed = (int)(((float) Pos_Big / 100.0) * 25.0);
        left_speed = (int) (((float) Pos_Big / 100.0) * 75.0) + 25;
    }
    
    //Set the motor speed
    motor_speed(right_speed, left_speed);
}

int main(void)
{
    //TODO: Set global values to default
    //variables
    int state = START;
    
    while(start_button() == 0);
    
    #ifdef DEBUG
      /* printf("Val: %d", analog(5));
    
    while(stop_button() == 0);
    while(start_button() == 0);
    
    printf("\n\n\n\n\n\n\n\n");
    
    printf("Val: %d", analog(5));*/
      
      motor_speed(50, 50);
    while(stop_button() == 0);
    stop();
    
    #else
    
    while(1)
      {
        //switch based on the bot's state
        switch(state)
          {
            
            case START:
              ctrl_bot();
            
            //allow the bot to be stopped
            if(stop_button() == 1)
              {
                state = STOP;
                stop(); 
            }
            break;
            case STOP:
              //allow the bot to be restarted
              if(start_button() == 1)
              {
                state = START;
            }
            break;
        }
    }
    
    #endif
}
