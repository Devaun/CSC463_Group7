#define RIGHT 1
#define LEFT 2
#define FORWARD 3
#define STOP 4
#define TIMEOUT 1250

#define DEBUG

float Neg_Big;//default 75 / 0
float Neg_Small;//default 50 / 25
float Pos_Small;//default 25 / 50
float Pos_Big;    //default 0 / 75

void motor_speed(int rightSpeed, int leftSpeed)
{
    motor(0, rightSpeed);
    motor(2, leftSpeed);
}

//Returns the difference between the two sensors
void calc_fuzzy(void)
{
    int dif;
    int temp;
    //Left - Right
    dif = (analog(6) - analog(5));
    
    if(dif < -100)
      {
        //Neg Big
        temp = ((-1 * dif) - 100);
        if(temp > 100)
          {
            Neg_Big = 1;
        }
        else
          {
            Neg_Big = (temp / 100);
        }
        
        Neg_Small = 0;
        Pos_Small = 0;
        Pos_Big = 0;
    }
    else if(dif < 0)
      {
        //Neg_Small
        temp = (-1 * dif);
        
        Neg_Small = (temp / 100);
        
        Neg_Big = 0;
        Pos_Small = 0;
        Pos_Big = 0;
    }
    else if(dif < 100)
      {
        //Pos_Small
        Pos_Small = dif;
        
        Neg_Big = 0;
        Neg_Small = 0;
        Pos_Big = 0;
    }
    else
      {
        //Pos_Big
        temp = dif - 100;
        
        if(temp > 100)
          {
            Pos_Big = 1;
        }
        else
          {
            Pos_Big = (temp / 100);
        }
        
        Neg_Big = 0;
        Neg_Small = 0;
        Pos_Small = 0;
    }
}

void turn_right()
{
    //Move right
    motor(0, 50);
    motor(2, 50);
}

void turn_left()
{
    //Move left
    motor(0, -50);
    motor(2, -50);
}



//Turn off both motors
void stop(void)
{
    off(0);
    off(2);
}

int check_right(int passLimit)
{
    int counter = 0;
    int value;
    
    //Move right
    turn_right();
    
    //Check if we found the tape
    while(counter < TIMEOUT)
      {
        //Check the current sensor value
        value = check_sensor();
        
        //Check if the value is in range
        if((value > (passLimit - 10)) && (value < (passLimit + 10)))
          {
            return 1;
        }
        
        counter++;
    }
    
    //stop turning the bot
    stop();
    
    //If tape no found reset bot position
    counter = 0;
    turn_left();
    
    //reset the bot's position
    while(counter < (TIMEOUT + TIMEOUT) + 500)
      {     
        counter++;
    }
    
    //return false
    return 0;
}

int check_left(int passLimit)
{
    int counter = 0;
    int value;
    
    //Move left
    turn_left();
    
    //Check if we found the tape
    while(counter < TIMEOUT)
      {
        //Check the sensor value
        value = check_sensor();
        
        //If the value is in range return true
        if((value > (passLimit - 10)) && (value < (passLimit + 10)))
          {
            return 1;
        }
        
        counter++;
    }
    
    //stop turning the bot
    stop();
    
    //If tape no found reset bot position
    counter = 0;
    turn_right();
    
    //Reset the bot's position
    while(counter < (TIMEOUT + TIMEOUT) + 500)
      {     
        counter++;
    }
    
    //we have not found the tape
    return 0;
}

int main(void)
{
    //TODO: Set global values to default
    //variables
    int direction = FORWARD;
    int value;
    int passLimit = 0;
    
    while(start_button() == 0);
    
    #ifdef DEBUG
      printf("Val: %d", analog(5));
    
    while(stop_button() == 0);
    while(start_button() == 0);
    
    printf("\n\n\n\n\n\n\n\n");
    
    printf("Val: %d", analog(5));
    
    #else
    
    //Get the average Light sensor value
    passLimit = passLimit + check_sensor();
    passLimit = passLimit + check_sensor();
    passLimit = passLimit + check_sensor();
    passLimit = passLimit / 3;
    
    while(1)
      {        
        switch(direction)
          {
            case FORWARD:
              value = check_sensor();
            
            //As long as we have found the tape, move forawrd
            while((value > (passLimit - 10)) && (value < (passLimit + 10)))
              {
                //move forward
                forward(-50, 50);
                
                //Check the new sensor value
                value = check_sensor();
            }
            
            //When we lose the tape we will check right
            direction = RIGHT;
            break;
            case RIGHT:
              //Check if the tape is to the right of the bot
              if(check_right(passLimit) == 1)
              {
                direction = FORWARD;
            } 
            else
              {
                //check left
                direction = LEFT;
            }
            break;
            case LEFT:
              //Check if the tape is to the left of the bot
              if(check_left(passLimit) == 1)
              {
                direction = FORWARD;
            }
            else
              {
                //We have lost the tape, just stop
                printf("Lost or end");
                direction = STOP;
            }
            break;
            default:
              stop();
            direction = STOP;
            break;
        }
    }
    
    #endif
}
